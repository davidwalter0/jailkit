INSTALL = @INSTALL@
prefix = @prefix@
iniprefix =/etc/jailkit/
PACKAGE = @PACKAGE@

INIFILES = jk_check.ini jk_init.ini jk_lsh.ini jk_socketd.ini jk_chrootsh.ini

jailkit: all
all:
	@cd src/ && $(MAKE) all
	@cd py/ && $(MAKE) all
	@cd man/ && $(MAKE) all

clean:
	rm -f core *~ ini/*~
	rm -rf autom4te.cache/
	@cd src/ && $(MAKE) clean
	@cd py/ && $(MAKE) clean
	@cd man/ && $(MAKE) clean

distclean:
	rm -f core *~ ini/*~
	rm -rf autom4te.cache/
	rm -f Makefile config.log config.status
	@cd src/ && $(MAKE) distclean
	@cd py/ && $(MAKE) distclean
	@cd man/ && $(MAKE) distclean

install:
	${INSTALL} -d -m 755 ${iniprefix}
	for file in ${INIFILES} ; do \
		if [ -f ${iniprefix}$${file} ]; then \
			${INSTALL} -g root -o root -m 0644 ini/$${file} ${iniprefix}$${file}.dist ;\
		else \
			${INSTALL} -g root -o root -m 0644 ini/$${file} ${iniprefix} ;\
		fi ;\
	done
	@cd src/ && $(MAKE) install
	@cd py/ && $(MAKE) install
	@cd man/ && $(MAKE) install
	# test if the jk_chrootsh is already in /etc/shells
	if ! grep ${prefix}/bin/jk_chrootsh /etc/shells ; then \
		echo "appending ${prefix}/bin/jk_chroots to /etc/shells";\
		echo ${prefix}/bin/jk_chrootsh >> /etc/shells ;\
	fi


uninstall:
	rm -f /etc/jailkit/*.ini
	rmdir --ignore-fail-on-non-empty /etc/jailkit
	@cd src/ && $(MAKE) uninstall
	@cd py/ && $(MAKE) uninstall
	@cd man/ && $(MAKE) uninstall

	